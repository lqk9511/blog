(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{345:function(e,t,s){"use strict";s.r(t);var v=s(28),r=Object(v.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"es6-代码转成-es5-代码的实现思路是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6-代码转成-es5-代码的实现思路是什么"}},[e._v("#")]),e._v(" ❓ ES6 代码转成 ES5 代码的实现思路是什么")]),e._v(" "),s("p",[e._v("参考 Babel 转换实现方式")]),e._v(" "),s("p",[e._v("Babel 是如何把 ES6 转成 ES5 呢，其大致分为三步：")]),e._v(" "),s("ul",[s("li",[e._v("将代码字符串解析成抽象语法树，即所谓的 AST")]),e._v(" "),s("li",[e._v("对 AST 进行处理，在这个阶段可以对 ES6 代码进行相应转换，即转成 ES5 代码")]),e._v(" "),s("li",[e._v("根据处理后的 AST 再生成代码字符串")])]),e._v(" "),s("p",[e._v("可以使用"),s("code",[e._v("@babel/parser")]),e._v("的"),s("code",[e._v("parse")]),e._v("方法，将代码字符串解析成 AST；使用"),s("code",[e._v("@babel/core")]),e._v("的"),s("code",[e._v("transformFromAstSync")]),e._v(" 方法，对 AST 进行处理，将其转成 ES5 并生成相应的代码字符串；过程中，可能还需要使用 "),s("code",[e._v("@babel/traverse")]),e._v(" 来获取依赖文件等。")])])}),[],!1,null,null,null);t.default=r.exports}}]);