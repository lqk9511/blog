(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{267:function(s,t,a){"use strict";a.r(t);var n=a(28),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-flow"}},[s._v("#")]),s._v(" git-flow")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("开卷有益")]),s._v(" "),a("p",[s._v("好的习惯 受用一生")])]),s._v(" "),a("p",[s._v("在网上冲浪的时候，可以看到各种的 git-flow 的介绍、翻译等。但是个人觉得都讲的太过官方化，有些晦涩。下面是我在工作中整理出来的一套流程（个人觉得会清晰一点）。")]),s._v(" "),a("h2",{attrs:{id:"分支介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支介绍"}},[s._v("#")]),s._v(" 分支介绍")]),s._v(" "),a("p",[s._v("主要常用分支：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("主分支 "),a("code",[s._v("master")]),s._v("（发布正式使用的都是这个分支）")])]),s._v(" "),a("li",[a("p",[s._v("开发分支 "),a("code",[s._v("dev")]),s._v("（所有功能分支在开发的时候需要验证，除了在本地验证，还可以合入 "),a("code",[s._v("dev")]),s._v(" 发布验证）")])]),s._v(" "),a("li",[a("p",[s._v("测试分支 "),a("code",[s._v("test")]),s._v("（所有的功能分支开发完成后会合入 "),a("code",[s._v("test")]),s._v("发布，就是我们所说的提测）")])]),s._v(" "),a("li",[a("p",[s._v("预生产分支 "),a("code",[s._v("pre")]),s._v(" （测试完毕后，还是会在预发环境下面再次 check 一面，才会上生产）")])]),s._v(" "),a("li",[a("p",[s._v("功能分支 "),a("code",[s._v("feature/版本号")]),s._v("（通常是我们需要开发的需求，起名最好跟版本号走）")])]),s._v(" "),a("li",[a("p",[s._v("修复分支 "),a("code",[s._v("hotfix/bug号")]),s._v("（通常是生产上出现了一些问题，需要紧急修复，起名最好按照 bug 号）")])])]),s._v(" "),a("h2",{attrs:{id:"git-开发流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-开发流程"}},[s._v("#")]),s._v(" git 开发流程")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("无论是开发新的版本，还是需要修复紧急的线上问题，都需要遵循以下步骤以及规范。")])]),s._v(" "),a("h3",{attrs:{id:"从-master-分支拉取最新的代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从-master-分支拉取最新的代码"}},[s._v("#")]),s._v(" 从 "),a("code",[s._v("master")]),s._v(" 分支拉取最新的代码")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切到 master 分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gcm 「简写，如果你装了 zsh（母鸡请search） 可以直接使用简写，以下命令行代码后都会跟简写」")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取最新的代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull --rebase --autostash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gupa")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切一个新的分支，功能分支起名「feature/版本号」，修复分支起名「hotfix/版本号」")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b feature/1.0.0\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gcb feature/1.0.0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"commit-提交规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commit-提交规范"}},[s._v("#")]),s._v(" "),a("code",[s._v("commit")]),s._v(" 提交规范")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 完成了怎么样的事情")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'feat#版本号: xxx'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gcmsg 'feat#版本号: xxx'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 12345(bugId)什么样子的bug")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fixed#12345: xxx'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于什么的重构")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refactor: xxx'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不会修改src或测试文件的更改。例如更新构建任务，程序包管理器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'chore: xxx'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 代码样式，不影响代码含义的更改（空白，格式，缺少分号等）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'style: xxx'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加缺少的测试或更正现有测试")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test: xxx'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 还原提交")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'revert: xx'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("h3",{attrs:{id:"多人同时开发同一个分支时"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多人同时开发同一个分支时"}},[s._v("#")]),s._v(" 多人同时开发同一个分支时")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当远程的提交多于本地提交时，需要先 rebase")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull --rebase --autostash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gupa")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gp")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"功能开发完毕，提测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能开发完毕，提测"}},[s._v("#")]),s._v(" 功能开发完毕，提测")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("需要在提测的同时，提交一个 MR，由团队 Leader 安排小伙伴跟你一起对你这个版本代码进行 Review，提 MR 步骤请看下面")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切到test分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gco test")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取test代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull --rebase --autostash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gupa")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 合并功能分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge --no-ff feature/1.0.0\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gm --no-ff feature/1.0.0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --no-ff：不使用 fast-forward 方式合并，保留分支的commit历史")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --squash：使用 squash 方式合并，把多次分支commit历史压缩为一次")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# https://segmentfault.com/q/1010000002477106")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# push到远程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gp")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h3",{attrs:{id:"提交-mr（merge-request）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交-mr（merge-request）"}},[s._v("#")]),s._v(" 提交 MR（Merge Request）")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切到master分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gcm")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取最新master代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull --rebase --autostash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gupa")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再切到当前开发的分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout feature/xxx\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gco feature/xxx")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rebase master")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grbm")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果rebase 产生冲突，手动解决冲突，然后")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ga .")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase --continue\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grbc")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rebase 完之后")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gp")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意：当 rebase 过程中需要解决冲突")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 rebase 完成之后")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git push 无效后 需要用下面的命令")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# !!! 用这个命令前 一定要确保本地代码跟线上代码的同步")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git pull --rebase 再一次")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push --force-with-lease\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gpf")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])]),a("h3",{attrs:{id:"发布预发环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布预发环境"}},[s._v("#")]),s._v(" 发布预发环境")]),s._v(" "),a("p",[s._v("发布过程同「提测」，合并分支修改为 "),a("code",[s._v("pre")])]),s._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("禁止把 "),a("code",[s._v("dev")]),s._v("、"),a("code",[s._v("test")]),s._v("、"),a("code",[s._v("pre")]),s._v("、"),a("code",[s._v("master")]),s._v("分支 "),a("code",[s._v("merge")]),s._v(" 入自己当前正在开发的 "),a("code",[s._v("feature")]),s._v(" 分支中")])]),s._v(" "),a("h3",{attrs:{id:"测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[s._v("#")]),s._v(" 测试")]),s._v(" "),a("p",[s._v("在测试、修改 bug、测试、修改 bug 等一系列的循环过程后。发现你的 bug 没有了，测试那边也找不出你的问题了，那么恭喜你，终于可以上线了。找对应的负责人合并代码，并且等待前后端都确认无误，就可以发布上线了。")]),s._v(" "),a("h2",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("git flow 的工作流程其实是很灵活的，核心的流程其实没多少（个人以为）。完全可以根据自己公司的情况去制定一个符合公司开发流程的 flow（配合公司的开发环境啊，或者是 CI/CD 流程啊）。同时也可以看看我分享的其他的关于 git 的一些常用操作。")]),s._v(" "),a("blockquote",[a("p",[a("RouterLink",{attrs:{to:"/share/git.html"}},[s._v("工作中 Git 飞行姿势")])],1)]),s._v(" "),a("blockquote",[a("p",[a("RouterLink",{attrs:{to:"/share/git-commit-message.html"}},[s._v("更优雅的提交你的 Git Commit Message")])],1)]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("欢迎斧正，觉得对你有那么一点点帮助的，就请点个 "),a("a",{attrs:{href:"https://github.com/lqk9511/blog",target:"_blank",rel:"noopener noreferrer"}},[s._v("Star"),a("OutboundLink")],1),s._v("✨")])])}),[],!1,null,null,null);t.default=e.exports}}]);