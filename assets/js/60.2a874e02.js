(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{317:function(v,_,e){"use strict";e.r(_);var t=e(28),d=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"介绍下-set、map、weakset-和-weakmap-的区别？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍下-set、map、weakset-和-weakmap-的区别？"}},[v._v("#")]),v._v(" ❓介绍下 Set、Map、WeakSet 和 WeakMap 的区别？")]),v._v(" "),e("p",[v._v("中所周知，这道题目是考察我们对 es6 知识的掌握，这里同样我们用表格的形式来加深我们的记忆。")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th"),v._v(" "),e("th",[v._v("定义")]),v._v(" "),e("th",[v._v("属性")]),v._v(" "),e("th",[v._v("方法")]),v._v(" "),e("th",[v._v("遍历")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("Set")]),v._v(" "),e("td",[v._v("类似于数组，但是成员的值都是唯一的，没有重复的值。")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("constructor")]),v._v("：构造函数，默认就是"),e("code",[v._v("Set")]),v._v("函数。"),e("br"),v._v("- "),e("code",[v._v("size")]),v._v("：返回"),e("code",[v._v("Set")]),v._v("实例的成员总数")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("add(value)")]),v._v(" ：添加某个值，返回 Set 结构本身（不会发生类型转换）。"),e("br"),v._v(" - "),e("code",[v._v("delete(value)")]),v._v("：删除某个值，返回一个布尔值，表示删除是否成功。"),e("br"),v._v("- "),e("code",[v._v("has(value)")]),v._v("：返回一个布尔值，表示该值是否为"),e("code",[v._v("Set")]),v._v("的成员。"),e("br"),v._v(" - "),e("code",[v._v("clear()")]),v._v(" ：清除所有成员，没有返回值。")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("keys()")]),v._v("：返回键名的遍历器。"),e("br"),v._v("- "),e("code",[v._v("values()")]),v._v("：返回键值的遍历器。"),e("br"),v._v("- "),e("code",[v._v("entries()")]),v._v("：返回键值对的遍历器。"),e("br"),v._v("- "),e("code",[v._v("forEach()")]),v._v("：使用回调函数遍历每个成员，入参函数参数依次为"),e("strong",[v._v("键值")]),v._v("、"),e("strong",[v._v("键名")]),v._v("、"),e("strong",[v._v("集合本身")]),e("br")])]),v._v(" "),e("tr",[e("td",[v._v("WeakSet")]),v._v(" "),e("td",[v._v("不重复的值的集合。"),e("code",[v._v("WeakSet")]),v._v(" 的成员只能是"),e("strong",[v._v("对象")]),v._v("，而不能是其他类型的值。"),e("code",[v._v("WeakSet")]),v._v(" 中的对象都是"),e("strong",[v._v("弱引用")]),v._v("，即垃圾回收机制不考虑 "),e("code",[v._v("WeakSet")]),v._v(" 对该对象的引用，也就是说，如果其他对象都不再引用该对象，那么垃圾回收机制会自动回收该对象所占用的内存，不考虑该对象还存在于 "),e("code",[v._v("WeakSet")]),v._v(" 之中。")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("constructor")]),v._v("：构造函数，默认就是"),e("code",[v._v("WeakSet")]),v._v("函数。"),e("br")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("add(value)")]),v._v(" ：向 WeakSet 实例添加一个新成员，返回 Set 结构本身。"),e("br"),v._v(" - "),e("code",[v._v("delete(value)")]),v._v("：清除 "),e("code",[v._v("WeakSet")]),v._v(" 实例的指定成员，返回一个布尔值，表示清除是否成功。"),e("br"),v._v("- "),e("code",[v._v("has(value)")]),v._v("：返回一个布尔值，表示某个值是否在 "),e("code",[v._v("WeakSet")]),v._v(" 实例之中。")]),v._v(" "),e("td",[e("code",[v._v("WeakSet")]),v._v(" 不能遍历，是因为成员都是"),e("strong",[v._v("弱引用")]),v._v("，随时可能消失，遍历机制无法保证成员的存在，很可能刚刚遍历结束，成员就取不到了。"),e("code",[v._v("WeakSet")]),v._v(" 的一个用处，是储存 DOM 节点，而不用担心这些节点从文档移除时，会引发内存泄漏。")])]),v._v(" "),e("tr",[e("td",[v._v("Map")]),v._v(" "),e("td",[v._v("类似于对象，也是键值对的集合，但是“键”的范围不限于字符串，各种类型的值（包括对象）都可以当作键。")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("constructor")]),v._v("：构造函数，默认就是"),e("code",[v._v("Map")]),v._v("函数。"),e("br"),v._v(" - "),e("code",[v._v("size")]),v._v("：返回 Map 结构的成员总数。"),e("br")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("set(key, value)")]),v._v("：设置键名 "),e("code",[v._v("key")]),v._v(" 对应的键值为 "),e("code",[v._v("value")]),v._v("，然后返回整个 "),e("code",[v._v("Map")]),v._v(" 结构。如果"),e("code",[v._v("key")]),v._v("已经有值，则键值会被更新，否则就新生成该键。"),e("br"),v._v(" - "),e("code",[v._v("get(key)")]),v._v("：读取 "),e("code",[v._v("key")]),v._v(" 对应的键值，如果找不到 "),e("code",[v._v("key")]),v._v("，返回 "),e("code",[v._v("undefined")]),v._v("。"),e("br"),v._v(" - "),e("code",[v._v("has(key)")]),v._v("：返回一个布尔值，表示某个键是否在当前 "),e("code",[v._v("Map")]),v._v(" 对象之中。"),e("br"),v._v(" - "),e("code",[v._v("delete(key)")]),v._v("：删除某个键，返回 true。如果删除失败，返回 false。"),e("br"),v._v(" - "),e("code",[v._v("clear()")]),v._v("：清除所有成员，没有返回值。")]),v._v(" "),e("td",[v._v("同 "),e("code",[v._v("Set")]),v._v(" 遍历方法，其遍历的顺序都是成员插入的顺序。")])]),v._v(" "),e("tr",[e("td",[v._v("WeakMap")]),v._v(" "),e("td",[v._v("生成键值对的集合。 "),e("strong",[v._v("只接受对象作为键名（"),e("code",[v._v("null")]),v._v(" 除外），不接受其他类型的值作为键名。")]),v._v(" 键名所指向的对象，不计入垃圾回收机制。 注意，"),e("code",[v._v("WeakMap")]),v._v(" 弱引用的只是键名，而不是键值。键值依然是正常引用。")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("constructor")]),v._v("：构造函数，默认就是"),e("code",[v._v("WeakMap")]),v._v("函数。")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("set(key, value)")]),v._v("：设置键名 "),e("code",[v._v("key")]),v._v(" 对应的键值为 "),e("code",[v._v("value")]),v._v("，然后返回整个 "),e("code",[v._v("WeakMap")]),v._v(" 结构。如果"),e("code",[v._v("key")]),v._v("已经有值，则键值会被更新，否则就新生成该键。"),e("br"),v._v(" - "),e("code",[v._v("get(key)")]),v._v("：读取 "),e("code",[v._v("key")]),v._v(" 对应的键值，如果找不到 "),e("code",[v._v("key")]),v._v("，返回 "),e("code",[v._v("undefined")]),v._v("。"),e("br"),v._v(" - "),e("code",[v._v("has(key)")]),v._v("：返回一个布尔值，表示某个键是否在当前 "),e("code",[v._v("WeakMap")]),v._v(" 对象之中。"),e("br"),v._v(" - "),e("code",[v._v("delete(key)")]),v._v("：删除某个键，返回 true。如果删除失败，返回 false。"),e("br")]),v._v(" "),e("td",[v._v("没有遍历操作")])])])]),v._v(" "),e("hr"),v._v(" "),e("p",[v._v("下面来梳理简化一下上面的表格：")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th"),v._v(" "),e("th",[v._v("定义")]),v._v(" "),e("th",[v._v("属性")]),v._v(" "),e("th",[v._v("方法")]),v._v(" "),e("th",[v._v("遍历")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[e("code",[v._v("Set")])]),v._v(" "),e("td",[v._v("- 类似数组"),e("br"),v._v(" - 值唯一")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("constructor")]),e("br"),v._v(" - "),e("code",[v._v("size")]),e("br")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("add()")]),e("br"),v._v(" - "),e("code",[v._v("delete()")]),e("br"),v._v(" - "),e("code",[v._v("has()")]),e("br"),v._v(" - "),e("code",[v._v("clear()")])]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("keys()")]),e("br"),v._v(" - "),e("code",[v._v("values()")]),e("br"),v._v(" - "),e("code",[v._v("entries()")]),e("br"),v._v(" - "),e("code",[v._v("forEach()")]),e("br")])]),v._v(" "),e("tr",[e("td",[e("code",[v._v("WeakSet")])]),v._v(" "),e("td",[v._v("- 类似数组"),e("br"),v._v("- 成员只能是对象 "),e("br"),v._v(" - 值唯一 "),e("br"),v._v(" - 弱引用，不计入垃圾回收机制")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("constructor")])]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("add()")]),e("br"),v._v(" - "),e("code",[v._v("delete()")]),e("br"),v._v(" - "),e("code",[v._v("has()")])]),v._v(" "),e("td",[v._v("成员都是"),e("strong",[v._v("弱引用")]),v._v("不能遍历")])]),v._v(" "),e("tr",[e("td",[e("code",[v._v("Map")])]),v._v(" "),e("td",[v._v("- 类型对象 "),e("br"),v._v(" - 任意值都能当作键名")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("constructor")]),e("br"),v._v(" - "),e("code",[v._v("size")])]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("set(key,value)")]),v._v(" "),e("br"),v._v(" - "),e("code",[v._v("get(key)")]),v._v(" "),e("br"),v._v(" - "),e("code",[v._v("has(key)")]),v._v(" "),e("br"),v._v(" - "),e("code",[v._v("delete(key)")]),v._v(" "),e("br"),v._v(" - "),e("code",[v._v("clear()")])]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("keys()")]),e("br"),v._v(" - "),e("code",[v._v("values()")]),e("br"),v._v(" - "),e("code",[v._v("entries()")]),e("br"),v._v(" - "),e("code",[v._v("forEach()")])])]),v._v(" "),e("tr",[e("td",[e("code",[v._v("WeakMap")])]),v._v(" "),e("td",[v._v("- 类型对象 "),e("br"),v._v("- 键名只能是对象 "),e("br"),v._v(" - 键名不计入垃圾回收机制")]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("constructor")])]),v._v(" "),e("td",[v._v("- "),e("code",[v._v("set(key,value)")]),v._v(" "),e("br"),v._v(" - "),e("code",[v._v("get(key)")]),v._v(" "),e("br"),v._v(" - "),e("code",[v._v("has(key)")]),v._v(" "),e("br"),v._v(" - "),e("code",[v._v("delete(key)")])]),v._v(" "),e("td",[v._v("不能遍历")])])])]),v._v(" "),e("p",[v._v("那么这样看起来会不会好很多呢～呼呼哈嘿。（好吧我承认表格有点难看😞）")]),v._v(" "),e("p",[e("a",{attrs:{href:"http://es6.ruanyifeng.com/#docs/set-map",target:"_blank",rel:"noopener noreferrer"}},[v._v("这里我们附上阮老师相关的文章"),e("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=d.exports}}]);