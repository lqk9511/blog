(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{329:function(s,t,a){"use strict";a.r(t);var n=a(28),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-2-3-map-parseint-what-why"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-map-parseint-what-why"}},[s._v("#")]),s._v(" ❓"),a("code",[s._v("['1', '2', '3'].map(parseInt)")]),s._v(" what & why ?")]),s._v(" "),a("p",[s._v("首先我们看这道题目相对来说是挺简单的，我们先来分析一下：")]),s._v(" "),a("ul",[a("li",[s._v("目标值是一个字符串数组")]),s._v(" "),a("li",[s._v("对目标做"),a("code",[s._v("map")]),s._v("操作，方法创建一个新数组，其结果是该数组中的每个元素都调用一个提供的函数后返回的结果\n"),a("ul",[a("li",[s._v("callback 函数会有三个参数传入\n"),a("ul",[a("li",[a("code",[s._v("currentValue")]),s._v("：数组中正在处理的当前元素")]),s._v(" "),a("li",[a("code",[s._v("index")]),s._v("：数组中正在处理的当前元素的索引")]),s._v(" "),a("li",[a("code",[s._v("array")]),s._v("：方法调用的原数组（这里就是指字符串数组")])])]),s._v(" "),a("li",[s._v("thisArg（可选）：执行 "),a("code",[s._v("callback")]),s._v(" 函数时值被用作"),a("code",[s._v("this")])])])]),s._v(" "),a("li",[s._v("map 操作传入的是"),a("code",[s._v("parseInt")]),s._v("函数，方法依据指定基数 [ 参数 radix 的值]，把字符串 [ 参数 string 的值] 解析成整数\n"),a("ul",[a("li",[s._v("string：要解析的值。 如果此参数不是字符串，则使用 "),a("code",[s._v("ToString")]),s._v(" 抽象操作将其转换为字符串。忽略此参数中的前导空格")]),s._v(" "),a("li",[s._v("radix：（可选）一个介于 "),a("code",[s._v("2")]),s._v(" 到 "),a("code",[s._v("36")]),s._v(" 之间的整数，代表字符串的基数(数学数字系统中的基)。⚠️这并不是默认为 "),a("code",[s._v("10")]),s._v("。如果省略该参数或其值为 0，则数字将以 10 为基础来解析。如果该参数小于 2 或者大于 36，则 parseInt() 将返回 NaN")])])])]),s._v(" "),a("p",[s._v("那么分析到这里结果就显而易见了。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("parseInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// map运行过程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第1次遍历")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回 1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第2次遍历")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回 NaN")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第3次遍历")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据 `2` 基数去转换，单个位数大于基数，报错返回 NaN")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回 NaN")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最终得到的结果")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [1, NaN, NaN]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);